'use strict';

exports.__esModule = true;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _Dialog = require('./Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _getContainerRenderMixin = require('rc-util/lib/getContainerRenderMixin');

var _getContainerRenderMixin2 = _interopRequireDefault(_getContainerRenderMixin);

var _Portal = require('rc-util/lib/Portal');

var _Portal2 = _interopRequireDefault(_Portal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var IS_REACT_16 = !!_reactDom2['default'].createPortal;
var mixins = [];
if (!IS_REACT_16) {
    mixins.push((0, _getContainerRenderMixin2['default'])({
        isVisible: function isVisible(instance) {
            return instance.props.visible;
        },

        autoDestroy: false,
        getContainer: function getContainer(instance) {
            return instance.getContainer();
        }
    }));
}
;
var DialogWrap = (0, _createReactClass2['default'])({
    displayName: 'DialogWrap',
    mixins: mixins,
    getDefaultProps: function getDefaultProps() {
        return {
            visible: false
        };
    },
    shouldComponentUpdate: function shouldComponentUpdate(_ref) {
        var visible = _ref.visible;

        return !!(this.props.visible || visible);
    },
    componentWillUnmount: function componentWillUnmount() {
        if (IS_REACT_16) {
            return;
        }
        if (this.props.visible) {
            this.renderComponent({
                afterClose: this.removeContainer,
                onClose: function onClose() {},

                visible: false
            });
        } else {
            this.removeContainer();
        }
    },
    saveDialog: function saveDialog(node) {
        this._component = node;
    },
    getComponent: function getComponent(extra) {
        return _react2['default'].createElement(_Dialog2['default'], (0, _extends3['default'])({ ref: this.saveDialog }, this.props, extra, { key: "dialog" }));
    },
    getContainer: function getContainer() {
        if (this.props.getContainer) {
            return this.props.getContainer();
        }
        var container = document.createElement('div');
        document.body.appendChild(container);
        return container;
    },
    render: function render() {
        var visible = this.props.visible;

        var portal = null;
        if (!IS_REACT_16) {
            return portal;
        }
        if (visible || this._component) {
            portal = _react2['default'].createElement(_Portal2['default'], { getContainer: this.getContainer }, this.getComponent());
        }
        return portal;
    }
});
exports['default'] = DialogWrap;
module.exports = exports['default'];